pipeline {
    agent any

    stages {
        stage('Checkout Code 1') {
            steps {
                git url: 'https://github.com/Abhisheksingh67126/Banking-and-Finance.git', branch: 'master'
            }
        }

        stage('Code Compile & Test') {
            steps {
                sh 'mvn compile'
            }
        }

        stage('Test Package') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Quality Analysis (QA)') {
            steps {
                sh 'mvn checkstyle:checkstyle'
            }
        }

        stage('Package Application') {
            steps {
                sh 'mvn package'
            }
        }

        stage('Docker Build & Push') {
            steps {
                withCredentials([string(credentialsId: 'docker-hub-password', variable: 'DOCKER_PASSWORD')]) {
                    sh '''
                        docker build -t king094/banking-and-finance:v1.0.0.0 .
                        echo "$DOCKER_PASSWORD" | docker login -u king094 --password-stdin
                        docker push king094/banking-and-finance:v1.0.0.0
                    '''
                }
            }
        }

        stage('Build Test POC Machine Using Terraform') {
            steps {
                withCredentials([
                string(credentialsId: 'aws-access-key', variable: 'AWS_ACCESS_KEY_ID'),
                string(credentialsId: 'aws-secret-key', variable: 'AWS_SECRET_ACCESS_KEY')
            ]) {
                dir("${WORKSPACE}/test") {
                    sh '''
                        terraform init
                        terraform plan
                        terraform apply --auto-approve
                    '''
                }

                script {
                    def publicIp = sh(
                        script: "cd ${WORKSPACE}/test && terraform output -raw test_server_ip",
                        returnStdout: true
                    ).trim()

                    def inventoryContent = """[test-server]
                        ${publicIp} ansible_user=ubuntu ansible_ssh_private_key_file=${WORKSPACE}/test/KEY-PAIR-POC.pem
                         """
                        writeFile file: "${WORKSPACE}/test/inventory.ini", text: inventoryContent

                    sh "cat ${WORKSPACE}/test/inventory.ini"
                        }
        }
    }
}

                stage('Configure and Deploy to the Test Server') {
                    steps {
                        sh '''
                        cd test
                        chmod 600 KEY-PAIR-POC.pem
                        echo "Running Ansible Deployment..."
                        ansible-playbook -i inventory.ini ansible-playbook.yml \
                        --private-key KEY-PAIR-POC.pem \
                        --user ubuntu
        '''
    }
}
}
}
